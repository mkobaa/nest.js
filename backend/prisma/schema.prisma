// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{
    id String @id @default(uuid())
    lastName String
    firstName String
    providor String  @default("local")
    idProvider String? @unique
    role Role @default(USER)
    email String @unique
    password String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    userInfos UserInfos?

    blog Blog[]
    comment Comment[]
    like Like[]

}

model UserInfos{
    id String @id @default(uuid())
    bio String?
    commentCount Int @default(0)
    postCount Int @default(0)
    likeCount Int @default(0)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    user User @relation(fields: [userId], references: [id])
    userId String @unique
}

model Category{
    id String @id @default(uuid())
    name String @unique
    visibility Boolean @default(true)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    blog Blog[]
}

model Blog{
    id String @id @default(uuid())
    title String  @unique
    content String
    image String?
    views Int @default(0)
    likeCount Int @default(0)
    commentCount Int @default(0)
    visibility Boolean @default(true)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    user User @relation(fields: [userId], references: [id])
    userId String 
    category Category @relation(fields: [categoryId], references: [id])
    categoryId String 
    comments Comment[]
    likes Like[]

}

model Comment{
    id String @id @default(uuid())
    content String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    user User @relation(fields: [userId], references: [id])
    userId String @unique
    blog Blog @relation(fields: [blogId], references: [id])
    blogId String 
}

model Like{
    id String @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    user User @relation(fields: [userId], references: [id])
    userId String 
    blog Blog @relation(fields: [blogId], references: [id])
    blogId String 
}

enum Role {
    ADMIN
    MEMBER
    USER
}
